// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int                  @id @default(autoincrement())
  name        String               @unique
  description String?
  slug        String?              @unique
  sortOrder   Int                  @default(0)
  videos      CategoriesOnVideos[]
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

// New VWType Model
model VWType {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  slug        String            @unique
  description String?
  sortOrder   Int               @default(0)
  videos      VWTypesOnVideos[] // Relation to the join table
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model Video {
  id              Int                  @id @default(autoincrement())
  platform        VideoPlatform
  videoId         String               @unique
  title           String
  description     String?
  url             String?
  thumbnailUrl    String?
  channelTitle    String?
  channelUrl      String?
  transcript      String?
  status          VideoStatus          @default(DRAFT)
  isHowToVWVideo  Boolean              @default(false)
  categories      CategoriesOnVideos[]
  vwTypes         VWTypesOnVideos[] // Changed from VWType[] to relation
  tags            String[]
  slug            String?              @unique
  processingError String?
  sourceKeyword   String?
  processedAt     DateTime?
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
}

model CategoriesOnVideos {
  video      Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId    Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade) // Added onDelete Cascade
  categoryId Int
  assignedAt DateTime @default(now())
  assignedBy String?

  @@id([videoId, categoryId])
}

// New Join Table for Videos and VWTypes
model VWTypesOnVideos {
  video      Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId    Int
  vwType     VWType   @relation(fields: [vwTypeId], references: [id], onDelete: Cascade)
  vwTypeId   Int
  assignedAt DateTime @default(now())
  assignedBy String?

  @@id([videoId, vwTypeId])
}

enum VideoStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
  REJECTED
}

enum VideoPlatform {
  YOUTUBE
  VIMEO
}

// Old VWType enum is REMOVED
// enum VWType {
//   BEETLE
//   GHIA
//   THING
//   BUS
//   OFF_ROAD
//   TYPE3
//   TYPE4
//   ALL
// }
